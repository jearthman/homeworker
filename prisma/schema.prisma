generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique @db.VarChar(255)
  createdAt DateTime  @default(now()) @db.Timestamp(6)
  lastLogin DateTime? @db.Timestamp(6)
  student   Student?  @relation()
  studentId Int?      @unique
}

model Disability {
  id                  Int                 @id @default(autoincrement())
  name                String              @unique @db.VarChar(255)
  studentDisabilities StudentDisability[]
}

model Language {
  id               Int               @id @default(autoincrement())
  name             String            @unique @db.VarChar(255)
  studentLanguages StudentLanguage[]
  nativeSpeakers   Student[]
}

model StudentDisability {
  studentId    Int
  disabilityId Int
  disability   Disability @relation(fields: [disabilityId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  student      Student    @relation(fields: [studentId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([studentId, disabilityId])
}

model StudentLanguage {
  studentId  Int
  languageId Int
  language   Language @relation(fields: [languageId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  student    Student  @relation(fields: [studentId], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([studentId, languageId])
}

model Student {
  id                  Int                 @id @default(autoincrement())
  userId              Int                 @unique
  firstName           String              @db.VarChar(50)
  gradeLevel          String              @db.VarChar(50)
  nativeLanguageId    Int?
  studentDisabilities StudentDisability[]
  studentLanguages    StudentLanguage[]
  user                User                @relation(fields: [userId], references: [id])
  nativeLanguage      Language?           @relation(fields: [nativeLanguageId], references: [id])
  studentAssignments  StudentAssignment[]
}

model Assignment {
  id                 Int                 @id @default(autoincrement())
  title              String              @db.VarChar(255)
  description        String              @db.Text
  subject            String              @db.VarChar(255)
  gradeLevel         String              @db.VarChar(50)
  gradingCriteria    String              @db.Text
  studentAssignments StudentAssignment[]
}

model StudentAssignment {
  studentId    Int
  assignmentId Int
  status       String     @db.VarChar(50) // e.g., "completed", "in progress"
  grade        Int?
  student      Student    @relation(fields: [studentId], references: [id])
  assignment   Assignment @relation(fields: [assignmentId], references: [id])

  @@id([studentId, assignmentId])
}
